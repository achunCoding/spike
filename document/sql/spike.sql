CREATE TABLE `goods` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '商品ID',
  `goods_name` varchar(64) DEFAULT NULL COMMENT '商品名称',
  `goods_title` varchar(64) DEFAULT NULL COMMENT '商品标题',
  `goods_img` varchar(64) DEFAULT NULL COMMENT '商品图片存放路径',
  `goods_detail` longtext COMMENT '商品消息介绍',
  `goods_price` decimal(10,2) DEFAULT '0.00' COMMENT '商品单价',
  `goods_stock` int(11) DEFAULT '0' COMMENT '商品库存, -1表示没有限制',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4;


CREATE TABLE `order_info` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `goods_id` bigint(20) DEFAULT NULL COMMENT '商品ID',
  `user_id` bigint(20) DEFAULT NULL COMMENT '用户ID',
  `delivery_addr_id` bigint(20) DEFAULT NULL COMMENT '收获地址ID',
  `goods_name` varchar(64) DEFAULT NULL COMMENT '冗余过来的商品名称',
  `goods_count` int(11) DEFAULT '0' COMMENT '商品数量',
  `goods_price` decimal(10,2) DEFAULT '0.00' COMMENT '商品单价',
  `order_channel` tinyint(4) DEFAULT '0' COMMENT '1PC 2 ANDROID 3IOS',
  `status` tinyint(4) DEFAULT '0' COMMENT '订单状态 0 新建未支付， 1 已支付，2已发货，3已收货，4已退款。5已完成',
  `create_date` datetime DEFAULT NULL COMMENT '订单是创建时间',
  `pay_date` datetime DEFAULT NULL COMMENT '支付时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE `spike_goods` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `goods_id` bigint(20) DEFAULT NULL COMMENT '商品ID',
  `start_date` datetime DEFAULT NULL COMMENT '秒杀开始时间',
  `end_date` datetime DEFAULT NULL COMMENT '秒杀结束',
  `spike_price` decimal(10,2) DEFAULT '0.00' COMMENT '商品单价',
  `stock_count` int(11) DEFAULT '0' COMMENT '秒杀库存',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4;


CREATE TABLE `spike_order` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `goods_id` bigint(20) DEFAULT NULL COMMENT '商品ID',
  `user_id` bigint(20) DEFAULT NULL COMMENT '用户ID',
  `order_id` bigint(20) DEFAULT NULL COMMENT '订单ID',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE `spike_user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `username` varchar(32) NOT NULL DEFAULT '' COMMENT '用户名',
  `nickname` varchar(255) DEFAULT NULL COMMENT '用户昵称',
  `password` varchar(32) DEFAULT NULL COMMENT '密码两次MD5加密',
  `salt` varchar(10) DEFAULT NULL COMMENT '盐值',
  `head` varchar(128) DEFAULT NULL COMMENT '用户头像',
  `register_date` datetime DEFAULT NULL COMMENT '注册时间',
  `last_login_date` datetime DEFAULT NULL COMMENT '上次登录时间',
  `login_count` int(255) DEFAULT '0' COMMENT '登录次数',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;


INSERT INTO `spike`.`goods` (`id`, `goods_name`, `goods_title`, `goods_img`, `goods_detail`, `goods_price`, `goods_stock`) VALUES ('3', 'Java从入门到精通（第5版）', '297个应用实例+37个典型应用+30小时教学视频+海量开发资源库，丛书累计销量200多万册', '/image/java.jpg', '出版社： 清华大学出版社 ISBN：9787302517597版次：5商品编码：12555860品牌：清华大学出版社（TSINGHUA UNIVERSITY PRESS）包装：平装开本：16出版时间：2019-02-01用纸：胶版纸页数：580字数：1090000\r\n \r\n\r\n产品特色\r\n750.jpg\r\n\r\n编辑推荐\r\n“软件开发视频大讲堂”丛书是清华社计算机专业基础类零售图书1畅销的品牌之一。\r\n（1）丛书累计销售200多万册，深受广大开发者喜爱。\r\n（2）4本荣获“全行业优畅销书”奖，1本荣获清华社“专业畅销书”一等奖。\r\n（3）绝大多数品种在“全国计算机零售图书排行榜”同品种排行中名列前茅。\r\n（4）实用、易懂、资源丰富，被 数百所高校选为专业课教材。\r\n本书推荐：\r\n1. 循序渐进，实战讲述：基础知识→核心技术→高级应用→项目实战，符合认知规律。\r\n2. 297个应用实例+229集高清微视频+4个项目案例，边学边练，在实践中提升技能。\r\n3. 超值赠送海量开发资源库资源，助力你夯实基础，精准，有效，速练，练就转岗就业不败之力。 \r\n（1）实例资源库+源码资源库：732个实例及源码详细分析，多练实例，多读源码，是快速学习之道。\r\n（2）模块资源库：15个经典模块开发过程完整展现，拿来改改就能用。\r\n（3）项目资源库：15个企业项目开发过程的完整展现，帮助你反复练习，触类旁通。\r\n（4）面试资源库：369个企业面试真题及面试技巧，帮你进行职业规划，转岗就业不用愁。\r\n（5）测试题库系统：616道能力测试题目，由易及难，快速判断自己的真实水平，熟能生巧。\r\n4. 在线解答，高效学习。\r\n?（1）在线答疑QQ及技术支持网站。\r\n?（2）不定期进行在线直播课程。\r\n\r\n本书光盘资源下载地址：（请关注我们的百度云网盘，点击该书资源下载链接即可下载。） 百度云网盘链接： 本书配套网盘资源已上传：(光盘资源) https://pan.baidu.com/s/1QjvcMHchqYVFkB3H2jBppA 请用百度云网盘下载使用。\r\n\r\n\r\n\r\n\r\n内容简介\r\n《Java从入门到精通（第5版）》从初学者角度出发，通过通俗易懂的语言、丰富多彩的实例，详细介绍了使用Java语言进行程序开发需要掌握的知识。全书分为27章，包括初识Java，熟悉Eclipse开发工具，Java语言基础，流程控制，字符串，数组，类和对象，包装类，数字处理类，接口、继承与多态，类的高级特性，异常处理，Swing程序设计，集合类，I/O（输入/输出），反射，枚举类型与泛型，多线程，网络通信，数据库操作，Swing表格组件，Swing树组件，Swing其他高级组件，高级事件处理，AWT绘图，奔跑吧小恐龙和企业进销存管理系统等。\r\n\r\n作者简介\r\n明日科技，是一个拥有软件开发和项目实施方面的资深专家和学习型技术团队，利用积累的专业知识和经验，已开发出版了“从入门到精通”“软件开发实战1200例”“软件开发实战宝典”“软件项目开发全程实录”等系列丛书，是国内畅销的编程图书品牌。\r\n\r\n目录\r\n“开发资源库”目录\r\n第1篇　基础知识\r\n第1章　初识Java\r\n视频讲解：17分钟\r\n1.1 Java简介\r\n1.1.1　什么是Java语言\r\n1.1.2　Java的应用领域\r\n1.1.3　Java的版本\r\n1.1.4　怎样学好Java\r\n1.1.5　Java API文档\r\n1.2　Java语言的特性\r\n1.2.1　简单\r\n1.2.2　面向对象\r\n1.2.3　分布性\r\n1.2.4　可移植性\r\n1.2.5　解释型\r\n1.2.6　安全性\r\n1.2.7　健壮性\r\n1.2.8　多线程\r\n1.2.9　高性能\r\n1.2.10　动态\r\n1.3　搭建Java环境\r\n1.3.1　JDK下载\r\n1.3.2　Windows系统的JDK环境\r\n1.4　小结\r\n第2章　熟悉Eclipse开发工具\r\n视频讲解：21分钟\r\n2.1　熟悉Eclipse\r\n2.1.1　Eclipse简介\r\n2.1.2　下载Eclipse\r\n2.1.3　安装Eclipse的中文语言包\r\n2.1.4　Eclipse的配置与启动\r\n2.1.5　Eclipse工作台\r\n2.1.6　透视图与视图\r\n2.1.7　菜单栏\r\n2.1.8　工具栏\r\n2.1.9　“包资源管理器”视图\r\n2.1.10　“控制台”视图\r\n2.2　使用Eclipse\r\n2.2.1　创建Java项目\r\n2.2.2　创建Java类文件\r\n2.2.3　使用编辑器编写程序代码\r\n2.2.4　运行Java程序\r\n2.3　程序调试\r\n2.4　小结\r\n2.5　实践与练习\r\n第3章　Java语言基础\r\n视频讲解：1小时45分钟\r\n3.1　Java主类结构\r\n3.1.1　包声明\r\n3.1.2　声明成员变量和局部变量\r\n3.1.3　编写主方法\r\n3.1.4　导入API类库\r\n3.2　基本数据类型\r\n3.2.1　整数类型\r\n3.2.2　浮点类型\r\n3.2.3　字符类型\r\n3.2.4　布尔类型\r\n3.3　变量与常量\r\n3.3.1　标识符和关键字\r\n3.3.2 声明变量\r\n3.3.3　声明常量\r\n3.3.4 变量的有效范围\r\n3.4　运算符\r\n3.4.1　赋值运算符\r\n3.4.2　算术运算符\r\n3.4.3　自增和自减运算符\r\n3.4.4 比较运算符\r\n3.4.5　逻辑运算符\r\n3.4.6　位运算符\r\n3.4.7　三元运算符\r\n3.4.8　运算符优先级\r\n3.5　数据类型转换\r\n3.5.1　隐式类型转换\r\n3.5.2　显式类型转换\r\n3.6　代码注释与编码规范\r\n3.6.1　代码注释\r\n3.6.2　编码规范\r\n3.7　小结\r\n3.8　实践与练习\r\n第4章　流程控制\r\n视频讲解：1小时21分钟\r\n4.1　复合语句\r\n4.2　条件语句\r\n4.2.1　if条件语句\r\n4.2.2 switch多分支语句\r\n4.3　循环语句\r\n4.3.1　while循环语句\r\n4.3.2　do…while循环语句\r\n4.3.3　for循环语句\r\n4.4　循环控制\r\n4.4.1　break语句\r\n4.4.2　continue语句\r\n4.5　小结\r\n4.6　实践与练习\r\n第5章　字符串\r\n视频讲解：1小时53分钟\r\n5.1　String类\r\n5.1.1　声明字符串\r\n5.1.2　创建字符串\r\n5.2　连接字符串\r\n5.2.1　连接多个字符串\r\n5.2.2　连接其他数据类型\r\n5.3　获取字符串信息\r\n5.3.1　获取字符串长度\r\n5.3.2　字符串查找\r\n5.3.3　获取指定索引位置的字符\r\n5.4　字符串操作\r\n5.4.1　获取子字符串\r\n5.4.2　去除空格\r\n5.4.3　字符串替换\r\n5.4.4　判断字符串的开始与结尾\r\n5.4.5　判断字符串是否相等\r\n5.4.6　按字典顺序比较两个字符串\r\n5.4.7　字母大小写转换\r\n5.4.8　字符串分割\r\n5.5　格式化字符串\r\n5.5.1　日期和时间字符串格式化\r\n5.5.2 常规类型格式化\r\n5.6　使用正则表达式\r\n5.7　字符串生成器\r\n5.8　小结\r\n5.9　实践与练习\r\n第6章　数组\r\n视频讲解：1小时21分钟\r\n6.1　数组概述\r\n6.2　一维数组的创建及使用\r\n6.2.1　创建一维数组\r\n6.2.2　初始化一维数组\r\n6.2.3　使用一维数组\r\n6.3　二维数组的创建及使用\r\n6.3.1　二维数组的创建\r\n6.3.2　二维数组初始化\r\n6.3.3　使用二维数组\r\n6.4　数组的基本操作\r\n6.4.1　遍历数组\r\n6.4.2　填充替换数组元素\r\n6.4.3　对数组进行排序\r\n6.4.4　复制数组\r\n6.4.5　数组查询\r\n6.5　数组排序算法\r\n6.5.1　冒泡排序\r\n6.5.2　直接选择排序\r\n6.5.3　反转排序\r\n6.6　小结\r\n6.7　实践与练习\r\n第7章　类和对象\r\n视频讲解：1小时27分钟\r\n7.1　面向对象概述\r\n7.1.1　对象\r\n7.1.2　类\r\n7.1.3　封装\r\n7.1.4　继承\r\n7.1.5　多态\r\n7.2　类\r\n7.2.1　成员变量\r\n7.2.2　成员方法\r\n7.2.3 权限修饰符\r\n7.2.4　局部变量\r\n7.2.5　局部变量的有效范围\r\n7.2.6　this关键字\r\n7.3　类的构造方法\r\n7.4　静态变量、常量和方法\r\n7.5　类的主方法\r\n7.6　对象\r\n7.6.1　对象的创建\r\n7.6.2　访问对象的属性和行为\r\n7.6.3　对象的引用\r\n7.6.4　对象的比较\r\n7.6.5　对象的销毁\r\n7.7　小结\r\n7.8　实践与练习\r\n第8章　包装类\r\n视频讲解：32分钟\r\n8.1　Integer\r\n8.2　Boolean\r\n8.3　Byte\r\n8.4　Character\r\n8.5　Double\r\n8.6　Number\r\n8.7　小结\r\n8.8　实践与练习\r\n第9章　数字处理类\r\n视频讲解：38分钟\r\n9.1　数字格式化\r\n9.2　数学运算\r\n9.2.1　Math类\r\n9.2.2　常用数学运算方法\r\n9.3　随机数\r\n9.3.1　Math.random()方法\r\n9.3.2　Random类\r\n9.4　大数字运算\r\n9.4.1　BigInteger\r\n9.4.2　BigDecimal\r\n9.5　小结\r\n9.6　实践与练习\r\n第2篇　核心技术\r\n第10章　接口、继承与多态\r\n视频讲解：1小时30分钟\r\n10.1　类的继承\r\n10.2　Object类\r\n10.3　对象类型的转换\r\n10.3.1　向上转型\r\n10.3.2　向下转型\r\n10.4　使用instanceof操作符判断对象类型\r\n10.5　方法的重载\r\n10.6　多态\r\n10.7　抽象类与接口\r\n10.7.1 抽象类\r\n10.7.2　接口\r\n10.8　小结\r\n10.9　实践与练习\r\n第11章　类的高级特性\r\n视频讲解：35分钟\r\n11.1　Java类包\r\n11.1.1　类名冲突\r\n11.1.2　完整的类路径\r\n11.1.3　创建包\r\n11.1.4　导入包\r\n11.2　final变量\r\n11.3　final方法\r\n11.4　final类\r\n11.5 内部类\r\n11.5.1 成员内部类\r\n11.5.2 局部内部类\r\n11.5.3 匿名内部类\r\n11.5.4　静态内部类\r\n11.5.5　内部类的继承\r\n11.6　小结\r\n11.7　实践与练习\r\n第12章　异常处理\r\n视频讲解：1小时8分钟\r\n12.1　异常概述\r\n12.2　处理程序异常错误\r\n12.2.1　错误\r\n12.2.2 捕捉异常\r\n12.3 Java常见异常\r\n12.4　自定义异常\r\n12.5　在方法中抛出异常\r\n12.5.1　使用throws关键字抛出异常\r\n12.5.2　使用throw关键字抛出异常\r\n12.6　运行时异常\r\n12.7　异常的使用原则\r\n12.8　小结\r\n12.9　实践与练习\r\n第13章　Swing程序设计\r\n视频讲解：3小时2分钟\r\n13.1　Swing概述\r\n13.1.1　Swing特点\r\n13.1.2　Swing包\r\n13.1.3　常用Swing组件概述\r\n13.2　常用窗体\r\n13.2.1　JFrame窗体\r\n13.2.2　JDialog窗体\r\n13.3　标签组件与图标\r\n13.3.1　标签的使用\r\n13.3.2 图标的使用\r\n13.4　常用布局管理器\r\n13.4.1　绝对布局\r\n13.4.2 流布局管理器\r\n13.4.3　边界布局管理器\r\n13.4.4　网格布局管理器\r\n13.4.5　网格组布局管理器\r\n13.5　常用面板\r\n13.5.1　JPanel面板\r\n13.5.2　JScrollPane面板\r\n13.6　按钮组件\r\n13.6.1　提交按钮组件\r\n13.6.2　单选按钮组件\r\n13.6.3　复选框组件\r\n13.7　列表组件\r\n13.7.1 下拉列表框组件\r\n13.7.2 列表框组件\r\n13.8　文本组件\r\n13.8.1　文本框组件\r\n13.8.2　密码框组件\r\n13.8.3 文本域组件\r\n13.9　常用事件监听器\r\n13.9.1 监听事件简介\r\n13.9.2 动作事件监听器\r\n13.9.3 焦点事件监听器\r\n13.10　小结\r\n13.11 实践与练习\r\n第14章　集合类\r\n视频讲解：60分钟\r\n14.1　集合类概述\r\n14.2　Collection接口\r\n14.3　List集合\r\n14.3.1　List接口\r\n14.3.2　List接口的实现类\r\n14.4　Set集合\r\n14.5　Map集合\r\n14.5.1　Map接口\r\n14.5.2　Map接口的实现类\r\n14.6　小结\r\n14.7 实践与练习\r\n第15章　I/O（输入/输出）\r\n视频讲解：1小时40分钟\r\n15.1　流概述\r\n15.2　输入/输出流\r\n15.2.1　输入流\r\n15.2.2　输出流\r\n15.3　File类\r\n15.3.1　文件的创建与删除\r\n15.3.2　获取文件信息\r\n15.4　文件输入/输出流\r\n15.4.1FileInputStream与FileOutputStream类\r\n15.4.2 FileReader和FileWriter类 \r\n15.5　带缓存的输入/输出流\r\n15.5.1BufferedInputStream与BufferedOutputStream类\r\n15.5.2　BufferedReader与BufferedWriter类\r\n15.6　数据输入/输出流\r\n15.7　ZIP压缩输入/输出流\r\n15.7.1　压缩文件\r\n15.7.2　解压缩ZIP文件\r\n15.8　小结\r\n15.9　实践与练习\r\n第16章　反射\r\n视频讲解：1小时3分钟\r\n16.1　Class类与Java反射\r\n16.1.1　访问构造方法\r\n16.1.2　访问成员变量\r\n16.1.3　访问方法\r\n16.2　使用Annotation功能\r\n16.2.1　定义Annotation类型\r\n16.2.2　访问Annotation信息\r\n16.3　小结\r\n16.4　实践与练习\r\n第17章　枚举类型与泛型\r\n视频讲解：1小时20分钟\r\n17.1　枚举类型\r\n17.1.1 使用枚举类型设置常量\r\n17.1.2　深入了解枚举类型\r\n17.1.3 使用枚举类型的优势\r\n17.2　泛型\r\n17.2.1　回顾向上转型与向下转型\r\n17.2.2　定义泛型类\r\n17.2.3 泛型的常规用法\r\n17.2.4　泛型的高级用法\r\n17.2.5 泛型总结\r\n17.3　小结\r\n17.4　实践与练习\r\n第18章　多线程\r\n视频讲解：45分钟\r\n18.1　线程简介\r\n18.2　实现线程的两种方式\r\n18.2.1　继承Thread类\r\n18.2.2 实现Runnable接口\r\n18.3　线程的生命周期\r\n18.4　操作线程的方法\r\n18.4.1　线程的休眠\r\n18.4.2　线程的加入\r\n18.4.3　线程的中断\r\n18.4.4 线程的礼让\r\n18.5　线程的优先级\r\n18.6　线程同步\r\n18.6.1　线程安全\r\n18.6.2　线程同步机制\r\n18.7　小结\r\n18.8　实践与练习\r\n第19章　网络通信\r\n视频讲解：60分钟\r\n19.1　网络程序设计基础\r\n19.1.1　局域网与因特网\r\n19.1.2　网络协议\r\n19.1.3　端口和套接字\r\n19.2　TCP程序设计基础\r\n19.2.1　InetAddress类\r\n19.2.2 ServerSocket类\r\n19.2.3　TCP网络程序\r\n19.3　UDP程序设计基础\r\n19.3.1　DatagramPacket类\r\n19.3.2　DatagramSocket类\r\n19.3.3　UDP网络程序\r\n19.4　小结\r\n19.5　实践与练习\r\n第20章　数据库操作\r\n视频讲解：47分钟\r\n20.1　数据库基础知识\r\n20.1.1　什么是数据库\r\n20.1.2　数据库的种类及功能\r\n20.1.3　SQL语言\r\n20.2　JDBC概述\r\n20.2.1　JDBC-ODBC桥\r\n20.2.2　JDBC技术\r\n20.2.3　JDBC驱动程序的类型\r\n20.3　JDBC中常用的类和接口\r\n20.3.1　Connection接口\r\n20.3.2　Statement接口\r\n20.3.3　PreparedStatement接口\r\n20.3.4　DriverManager类\r\n20.3.5　ResultSet接口\r\n20.4　数据库操作\r\n20.4.1　连接数据库\r\n20.4.2　向数据库发送SQL语句\r\n20.4.3　处理查询结果集\r\n20.4.4　顺序查询\r\n20.4.5　模糊查询\r\n20.4.6　预处理语句\r\n20.4.7　添加、修改、删除记录\r\n20.5　小结\r\n20.6　实践与练习\r\n第3篇　高级应用\r\n第21章 Swing表格组件\r\n视频讲解：33分钟\r\n21.1　利用JTable类直接创建表格\r\n21.1.1　创建表格\r\n21.1.2　定制表格\r\n21.1.3　操纵表格\r\n21.2　表格模型与表格\r\n21.2.1　利用表格模型创建表格\r\n21.2.2　维护表格模型\r\n21.3　提供行标题栏的表格\r\n21.4　小结\r\n21.5　实践与练习\r\n第22章　Swing树组件\r\n视频讲解：20分钟\r\n22.1　简单的树\r\n22.2　处理选中节点事件\r\n22.3　遍历树节点\r\n22.4　定制树\r\n22.5　维护树模型\r\n22.6　处理展开节点事件\r\n22.7　小结\r\n22.8　实践与练习\r\n第23章　Swing其他高级组件\r\n视频讲解：1小时30分钟\r\n23.1　高级组件面板\r\n23.1.1　分割面板\r\n23.1.2　选项卡面板\r\n23.1.3　桌面面板和内部窗体\r\n23.2　菜　　单\r\n23.2.1 创建菜单栏\r\n23.2.2 创建弹出式菜单\r\n23.2.3 定制个性化菜单\r\n23.3　工具 栏\r\n23.4 文件选择器\r\n23.4.1 文件选择对话框\r\n23.4.2　使用文件过滤器\r\n23.5　进　度　条\r\n23.6　系 统 托 盘\r\n23.7　桌面集成控件\r\n23.8　小结\r\n23.9　实践与练习\r\n第24章　高级事件处理\r\n视频讲解：1小时13分钟\r\n24.1　键 盘 事 件\r\n24.2　鼠 标 事 件\r\n24.3　窗体事件\r\n24.3.1　捕获窗体焦点变化事件\r\n24.3.2　捕获窗体状态变化事件\r\n24.3.3　捕获其他窗体事件\r\n24.4　选项事件\r\n24.5　表格模型事件\r\n24.6　小结\r\n24.7　实践与练习\r\n第25章　AWT绘图\r\n视频讲解：1小时24分钟\r\n25.1　Java绘图\r\n25.1.1　Graphics\r\n25.1.2　Graphics2D\r\n25.2　绘制图形\r\n25.3　绘图颜色与画笔属性\r\n25.3.1　设置颜色\r\n25.3.2　画笔属性\r\n25.4　绘制文本\r\n25.4.1　设置字体\r\n25.4.2　显示文字\r\n25.5　绘制图片\r\n25.6　图像处理\r\n25.6.1　放大与缩小\r\n25.6.2　图像翻转\r\n25.6.3　图像旋转\r\n25.6.4　图像倾斜\r\n25.7　小结\r\n25.8　实践与练习\r\n第4篇　项目实战\r\n第26章 奔跑吧，小恐龙！\r\n视频讲解：54分钟\r\n26.1　开发背景\r\n26.2 系统结构设计\r\n26.2.1 系统功能结构\r\n26.2.2 系统业务流程\r\n26.3 项目目录结构预览\r\n26.4 游戏模型设计\r\n26.4.1 恐龙类\r\n26.4.2 障碍类\r\n26.5 音效模块设计\r\n26.5.1 音频播放器\r\n26.5.2 音效工具类\r\n26.6 计分器模块设计\r\n26.7 视图模块设计\r\n26.7.1 主窗体\r\n26.7.2 游戏面板\r\n26.7.3 成绩对话框\r\n26.8 游戏核心功能设计\r\n26.8.1 刷新帧\r\n26.8.2 滚动背景\r\n26.8.3 碰撞检测\r\n26.8.4 键盘监听\r\n26.9 小结\r\n第27章　企业进销存管理系统\r\n视频讲解：1小时12分钟\r\n27.1　系统分析\r\n27.2　系统设计\r\n27.3　开发环境\r\n27.4　数据库与数据表设计\r\n27.5　创建项目\r\n27.6　系统文件夹组织结构\r\n27.7　公共类设计\r\n27.8　系统登录模块设计\r\n27.9　系统主窗体设计\r\n27.10　进货单模块设计\r\n27.11　销售单模块设计\r\n27.12　库存盘点模块设计\r\n27.13　数据库备份与恢复模块设计\r\n27.14　运行项目\r\n27.15 开发常见问题与解决\r\n27.16 小结\r\n\r\n查看全部↓\r\n前言/序言\r\n前 言 \r\n丛书说明：“软件开发视频大讲堂”丛书（第1版）于2008年8月出版，因其编写细腻，易学实用，配备海量学习资源和全程视频等，在软件开发类图书市场上产生了很大反响，绝大部分品种在全国软件开发零售图书排行榜中名列前茅，2009年多个品种被评为“全国优秀畅销书”。 \r\n“软件开发视频大讲堂”丛书（第2版）于2010年8月出版，第3版于2012年8月出版，第4版于2016年10月出版。十年锤炼，打造经典。丛书迄今累计重印426次，销售200多万册。不仅深受广大程序员的喜爱，还被百余所高校选为计算机、软件等相关专业的教学参考用书。 \r\n“软件开发视频大讲堂”丛书（第5版）在继承前4版所有优点的基础上，将开发环境和工具全部更新为最新的JDK10和Eclipse最新版本，并且全部重新录制了视频，结合目前市场需要，进一步对丛书品种进行了完善，对相关内容进行了更新优化，使之更适合读者学习，为了方便教学，还提供了教学课件PPT。 \r\nJava是Sun公司推出的能够跨越多平台的、可移植性最高的一种面向对象的编程语言。自面世以来，Java凭借其易学易用、功能强大的特点得到了广泛的应用。其强大的跨平台特性使Java程序可以运行在大部分系统平台', '55.10', '99');
INSERT INTO `spike`.`goods` (`id`, `goods_name`, `goods_title`, `goods_img`, `goods_detail`, `goods_price`, `goods_stock`) VALUES ('4', 'Java编程思想（第4版） [thinking in java]', 'Java学习必读经典,殿堂级著作！赢得了全球程序员的广泛赞誉', '/image/think.jpg', '出版社： 机械工业出版社 ISBN：9787111213826版次：4商品编码：10058164品牌：机工出版包装：平装丛书名： 计算机科学丛书 外文名称：thinking in java开本：16开出版时间：2007-06-01用纸：胶版纸页数：880正文语种：中文\r\n \r\n\r\n\r\n产品特色\r\n店铺入口750-100B.jpg\r\n\r\n\r\njava编程思想750.jpg\r\n\r\n\r\n750.jpg\r\n\r\n编辑推荐\r\n图书封底提供的网址更改为：https://www.mindviewllc.com/about/\r\n\r\n\r\n\r\n内容简介\r\n　　《计算机科学丛书：Java编程思想（第4版）》赢得了全球程序员的广泛赞誉，即使是晦涩的概念，在BruceEckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从Java的基础语法到高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。\r\n　　从《计算机科学丛书：Java编程思想（第4版）》获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对C、C++以及Java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、JavaI/O系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了Java语言基础语法以及高级特性，适合各个层次的Java程序员阅读，同时也是高等院校讲授面向对象程序设计语言以及Java语言的好教材和参考书。\r\n　　《计算机科学丛书：Java编程思想（第4版）》特点：\r\n　　适合初学者与专业人员的经典的面向对象叙述方式，为更新的JavaSE5/6增加了新的示例和章节。\r\n　　测验框架显示程序输出。\r\n　　设计模式贯穿于众多示例中：适配器、桥接器、职责链、命令、装饰器、外观、工厂方法、享元、点名、数据传输对象、空对象、代理、单例、状态、策略、模板方法以及访问者。\r\n　　为数据传输引入了XML，为用户界面引入了SWT和Flash。\r\n　　重新撰写了有关并发的章节，有助于读者掌握线程的相关知识。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n　　在线可获得Java讲座CD，其中包含BruceEckel的全部多媒体讲座。\r\n　　在网站上可以观看现场讲座、咨询和评论。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n\r\n作者简介\r\n　　Bruce Eckel，是MindView公司的总裁，该公司向客户提供软件咨询和培训。他是C++标准委员会拥有表决权的成员之一，拥有应用物理学学士和计算机工程硕士学位。除本书外，他还是《C++编程思想》的作者，并与人合著了《C++编程思想第2卷》。\r\n\r\n目录\r\n读者评论\r\n前言\r\n简介\r\n第1章 对象导论\r\n1.1 抽象过程\r\n1.2 每个对象都有一个接口\r\n1.3 每个对象都提供服务\r\n1.4 被隐藏的具体实现\r\n1.5 复用具体实现\r\n1.6 继承\r\n1.6.1 “是一个”（is-a）与“像是一个”（is-like-a）关系\r\n1.7 伴随多态的可互换对象\r\n1.8 单根继承结构\r\n1.9 容器\r\n1.9.1 参数化类型（范型）\r\n1.10 对象的创建和生命期\r\n1.11 异常处理：处理错误\r\n1.12 并发编程\r\n1.13 Java与Internet\r\n1.13.1 Web是什么\r\n1.13.2 客户端编程\r\n1.13.3 服务器端编程\r\n1.22 总结\r\n\r\n第2章 一切都是对象\r\n2.1 用引用操纵对象\r\n2.2 必须由你创建所有对象\r\n2.2.1 存储到什么地方\r\n2.2.2 特例：基本类型\r\n2.2.3 Java中的数组\r\n2.3 永远不需要销毁对象\r\n2.3.1 作用域\r\n2.3.2 对象的作用域\r\n2.4 创建新的数据类型：类\r\n2.4.1 域和方法\r\n2.4.2 基本成员默认值\r\n2.5 方法、参数和返回值\r\n2.5.1 参数列表\r\n2.6 构建一个Java程序\r\n2.6.1 名字可见性\r\n2.6.2 运用其他构件\r\n2.6.3 static 关键字\r\n2.7 你的第一个Java程序\r\n编译和运行\r\n2.8 注释和嵌入式文档\r\n2.8.1 注释文档\r\n2.8.2 语法\r\n2.8.3 嵌入式HTML\r\n2.8.4 一些标签示例\r\n2.8.5 文档示例\r\n2.9 编码风格\r\n2.10 总结\r\n2.11 练习\r\n\r\n第3章 操作符\r\n3.1 更简单的打印语句\r\n3.2 使用Java操作符\r\n3.3 优先级\r\n3.4 赋值\r\n3.4.1 方法调用中的别名问题\r\n3.5 算术操作符\r\n3.5.1 一元加、减操作符\r\n3.6 自动递增和递减\r\n3.7 关系操作符\r\n3.7.1 测试对象的等价性\r\n3.8 逻辑操作符\r\n3.8.1 短路\r\n3.9 直接常量\r\n3.9.1 指数记数法\r\n3.10 按位操作符\r\n3.11 移位操作符\r\n3.12 三元操作符 if-else\r\n3.13 字符串操作符 + 和 +=\r\n3.14 使用操作符时常犯的错误\r\n3.15 类型转换操作符\r\n3.15.1 截尾和舍入\r\n3.15.2 提升\r\n3.16 Java没有“sizeof”\r\n3.17 操作符小结\r\n3.18 总结\r\n\r\n......\r\n第4章 控制执行流程\r\n第5章 初始化与清理\r\n第6章 访问权限控制\r\n第7章 复用类\r\n第8章 多态\r\n第9章 接口\r\n第10章 内部类\r\n第11章 持有对象\r\n第12章 通过异常处理错误\r\n第13章 字符串\r\n第14章 类型信息\r\n第15章 泛型\r\n第16章 数组\r\n第17章 容器深入研究\r\n第18章 Java I/O系统\r\n第19章 枚举类型\r\n第20章 注解\r\n第21章 并发\r\n第22章 图形化用户界面\r\n附录A 补充材料\r\n可下载的补充材料\r\nThinking in C：Java的基础\r\nJava编程思想 研讨课\r\nHands-on Java研讨课CD\r\nThinking in Objects研讨课\r\nThinking in Enterprise Java\r\nThinking in Patterns(with Java)\r\nThinking in Patterns研讨课\r\n设计咨询与复审\r\n附录B 资源\r\n软件\r\n编辑器与IDE\r\n书籍\r\n分析与设计\r\nPython\r\n我的著作列表\r\n索引\r\n\r\n查看全部↓\r\n精彩书摘\r\n　　1.10 对象的创建和生命期\r\n　　在使用对象时，最关键的问题之一便是它们的生成和销毁方式。每个对象为了生存都需要资源，尤其是内存。当我们不再需要一个对象时，它必须被清理掉，使其占有的资源可以被释放和重用。在相对简单的编程情况下，怎样清理对象看起来似乎不是什么挑战：你创建了对象，根据需要使用它，然后它应该被销毁。然而，你很可能会遇到相对复杂的情况。\r\n　　例如，假设你正在为某个机场设计空中交通管理系统（同样的模型在仓库货柜管理系统、录像带出租系统或宠物寄宿店也适用）。一开始问题似乎很简单：创建一个容器来保存所有的飞机，然后为每一架进入空中交通控制区域的飞机创建一个新的飞机对象，并将其置于容器中。对于清理工作，只需在飞机离开此区域时删除相关的飞机对象即可。\r\n　　但是，可能还有别的系统记录着有关飞机的数据，也许这些数据不需要像主要控制功能那样立即引人注意。例如，它可能记录着所有飞离机场的小型飞机的飞行计划。因此你需要有第二个容器来存放小型飞机，无论何时，只要创建的是小型飞机对象，那么它同时也应该置入第二个容器内。然后某个后台进程在空闲时对第二个容器内的对象进行操作。\r\n　　现在问题变得更困难了：怎样才能知道何时销毁这些对象呢？当处理完某个对象之后，系统某个其他部分可能还在处理它。在其他许多场合中也会遇到同样的问题，在必须明确删除对象的编程系统中（例如C++），此问题会变得十分复杂。\r\n　　对象的数据位于何处？怎样控制对象的生命周期？C++认为效率控制是最重要的议题，所以给程序员提供了选择的权力。为了追求最大的执行速度，对象的存储空间和生命周期可以在编写程序时确定，这可以通过将对象置于堆栈（它们有时被称为自动变量（automaticvariable）或限域变量（scopedvariable））或静态存储区域内来实现。这种方式将存储空间分配和释放置于优先考虑的位置，某些情况下这样控制非常有价值。但是，也牺牲了灵活性，因为必须在编写程序时知道对象确切的数量、生命周期和类型。如果试图解决更一般化的问题，例如计算机辅助设计、仓库管理或者空中交通控制，这种方式就显得过于受限了。\r\n　　第二种方式是在被称为堆（heap）的内存池中动态地创建对象。在这种方式中，直到运行时才知道需要多少对象，它们的生命周期如何，以及它们的具体类型是什么。这些问题的答案只能在程序运行时相关代码被执行到的那一刻才能确定。如果需要一个新对象，可以在需要的时刻直接在堆中创建。因为存储空间是在运行时被动态管理的，所以需要大量的时间在堆中分配存储空间，这可能要远远大于在堆栈中创建存储空间的时间。在堆栈中创建存储空间和释放存储空间通常各需要一条汇编指令即可，分别对应将栈顶指针向下移动和将栈顶指针向上移动。创建堆存储空间的时间依赖于存储机制的设计。\r\n　　动态方式有这样一个一般性的逻辑假设：对象趋向于变得复杂，所以查找和释放存储空间的开销不会对对象的创建造成重大冲击。动态方式所带来的更大的灵活性正是解决一般化编程问题的要点所在。\r\n　　Java完全采用了动态内存分配方式e。每当想要创建新对象时，就要使用new关键字来构建此对象的动态实例。\r\n　　……\r\n\r\n查看全部↓\r\n前言/序言\r\n　　时隔两年多，《Java编程思想（第4版）》的中文版又要和广大Java程序员和爱好者们见面了。这是Java语言本身不断发展和完善的必然要求，也是本书作者BruceEckel孜孜不倦的创作激情和灵感所结出的硕果。　　《Java编程思想（第4版）》以Java最新的版本JDK5.0为基础，在第3版的基础上，添加了最新的语言特性，并且对第3版的结构进行了调整，使得所有章节的安排更加遵照循序渐进的特点，同时每一章的内容在分量上也都更加均衡，这使读者能够更加容易地阅读本书并充分了解每章所讲述的内容。在这里我们再次向BruceEckel致敬，他不但向我们展示了什么样的书籍才是经典书籍，而且还展示了经典书籍怎样才能精益求精，长盛不衰。　　Java已经成为了编程语言的骄子。我们可以看到，越来越多的大学在教授数据结构、程序设计和算法分析等课程时，选择以Java语言为载体。这说明Java语言已经是人们构建软件系统时主要使用的一种编程语言。但是，掌握好Java语言并不是一件可以轻松完成的任务，如何真正掌握Java语言，从而编写出健壮的、高效的以及灵活的程序是Java程序员们面临的重大挑战。　　《Java编程思想（第4版）》就是一本能够让Java程序员轻松面对这一挑战，并最终取得胜利的经典书籍。本书深入浅出、循序渐进地把我们领入Java的世界，让我们在不知不觉中就学会了用Java的思想去考虑问题、解决问题。本书不仅适合Java的初学者，更适合于有经验的Java程序员，这正是本书的魅力所在。但是，书中并没有涵盖Java所有的类、接口和方法，因此，如果你希望将它当作Java的字典来使用，那么显然就要失望了。　　我们在翻译本书的过程中力求忠于原著，为了保持连贯性，对原书第3版中仍然保持不变的部分，我们对译文除了个别地方之外，也没做修改。对于本书中出现的大量的专业术语尽量遵循标准的译法，并在有可能引起歧义之处注有英文原文，以方便读者对照与理解。　　全书由陈昊鹏翻译，郭嘉也参与了部分翻译工作。由于水平有限，书中出现错误与不妥之处在所难免，恳请读者批评指正。\r\n\r\n\r\n产品特色\r\n编辑推荐\r\n内容简介\r\n作者简介\r\n目录\r\n精彩书摘\r\n前言/序言\r\n\r\n下载客户端，开始阅读之旅\r\n出版社： 机械工业出版社 ISBN：9787111213826版次：4商品编码：10058164品牌：机工出版包装：平装丛书名： 计算机科学丛书 外文名称：thinking in java开本：16开出版时间：2007-06-01用纸：胶版纸页数：880正文语种：中文\r\n \r\n\r\n\r\n产品特色\r\n店铺入口750-100B.jpg\r\n\r\n\r\njava编程思想750.jpg\r\n\r\n\r\n750.jpg\r\n\r\n编辑推荐\r\n图书封底提供的网址更改为：https://www.mindviewllc.com/about/\r\n\r\n\r\n\r\n内容简介\r\n　　《计算机科学丛书：Java编程思想（第4版）》赢得了全球程序员的广泛赞誉，即使是晦涩的概念，在BruceEckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从Java的基础语法到高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。\r\n　　从《计算机科学丛书：Java编程思想（第4版）》获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对C、C++以及Java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、JavaI/O系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了Java语言基础语法以及高级特性，适合各个层次的Java程序员阅读，同时也是高等院校讲授面向对象程序设计语言以及Java语言的好教材和参考书。\r\n　　《计算机科学丛书：Java编程思想（第4版）》特点：\r\n　　适合初学者与专业人员的经典的面向对象叙述方式，为更新的JavaSE5/6增加了新的示例和章节。\r\n　　测验框架显示程序输出。\r\n　　设计模式贯穿于众多示例中：适配器、桥接器、职责链、命令、装饰器、外观、工厂方法、享元、点名、数据传输对象、空对象、代理、单例、状态、策略、模板方法以及访问者。\r\n　　为数据传输引入了XML，为用户界面引入了SWT和Flash。\r\n　　重新撰写了有关并发的章节，有助于读者掌握线程的相关知识。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n　　在线可获得Java讲座CD，其中包含BruceEckel的全部多媒体讲座。\r\n　　在网站上可以观看现场讲座、咨询和评论。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n\r\n作者简介\r\n　　Bruce Eckel，是MindView公司的总裁，该公司向客户提供软件咨询和培训。他是C++标准委员会拥有表决权的成员之一，拥有应用物理学学士和计算机工程硕士学位。除本书外，他还是《C++编程思想》的作者，并与人合著了《C++编程思想第2卷》。\r\n\r\n目录\r\n读者评论\r\n前言\r\n简介\r\n第1章 对象导论\r\n1.1 抽象过程\r\n1.2 每个对象都有一个接口\r\n1.3 每个对象都提供服务\r\n1.4 被隐藏的具体实现\r\n1.5 复用具体实现\r\n1.6 继承\r\n1.6.1 “是一个”（is-a）与“像是一个”（is-like-a）关系\r\n1.7 伴随多态的可互换对象\r\n1.8 单根继承结构\r\n1.9 容器\r\n1.9.1 参数化类型（范型）\r\n1.10 对象的创建和生命期\r\n1.11 异常处理：处理错误\r\n1.12 并发编程\r\n1.13 Java与Internet\r\n1.13.1 Web是什么\r\n1.13.2 客户端编程\r\n1.13.3 服务器端编程\r\n1.22 总结\r\n\r\n第2章 一切都是对象\r\n2.1 用引用操纵对象\r\n2.2 必须由你创建所有对象\r\n2.2.1 存储到什么地方\r\n2.2.2 特例：基本类型\r\n2.2.3 Java中的数组\r\n2.3 永远不需要销毁对象\r\n2.3.1 作用域\r\n2.3.2 对象的作用域\r\n2.4 创建新的数据类型：类\r\n2.4.1 域和方法\r\n2.4.2 基本成员默认值\r\n2.5 方法、参数和返回值\r\n2.5.1 参数列表\r\n2.6 构建一个Java程序\r\n2.6.1 名字可见性\r\n2.6.2 运用其他构件\r\n2.6.3 static 关键字\r\n2.7 你的第一个Java程序\r\n编译和运行\r\n2.8 注释和嵌入式文档\r\n2.8.1 注释文档\r\n2.8.2 语法\r\n2.8.3 嵌入式HTML\r\n2.8.4 一些标签示例\r\n2.8.5 文档示例\r\n2.9 编码风格\r\n2.10 总结\r\n2.11 练习\r\n\r\n第3章 操作符\r\n3.1 更简单的打印语句\r\n3.2 使用Java操作符\r\n3.3 优先级\r\n3.4 赋值\r\n3.4.1 方法调用中的别名问题\r\n3.5 算术操作符\r\n3.5.1 一元加、减操作符\r\n3.6 自动递增和递减\r\n3.7 关系操作符\r\n3.7.1 测试对象的等价性\r\n3.8 逻辑操作符\r\n3.8.1 短路\r\n3.9 直接常量\r\n3.9.1 指数记数法\r\n3.10 按位操作符\r\n3.11 移位操作符\r\n3.12 三元操作符 if-else\r\n3.13 字符串操作符 + 和 +=\r\n3.14 使用操作符时常犯的错误\r\n3.15 类型转换操作符\r\n3.15.1 截尾和舍入\r\n3.15.2 提升\r\n3.16 Java没有“sizeof”\r\n3.17 操作符小结\r\n3.18 总结\r\n\r\n......\r\n第4章 控制执行流程\r\n第5章 初始化与清理\r\n第6章 访问权限控制\r\n第7章 复用类\r\n第8章 多态\r\n第9章 接口\r\n第10章 内部类\r\n第11章 持有对象\r\n第12章 通过异常处理错误\r\n第13章 字符串\r\n第14章 类型信息\r\n第15章 泛型\r\n第16章 数组\r\n第17章 容器深入研究\r\n第18章 Java I/O系统\r\n第19章 枚举类型\r\n第20章 注解\r\n第21章 并发\r\n第22章 图形化用户界面\r\n附录A 补充材料\r\n可下载的补充材料\r\nThinking in C：Java的基础\r\nJava编程思想 研讨课\r\nHands-on Java研讨课CD\r\nThinking in Objects研讨课\r\nThinking in Enterprise Java\r\nThinking in Patterns(with Java)\r\nThinking in Patterns研讨课\r\n设计咨询与复审\r\n附录B 资源\r\n软件\r\n编辑器与IDE\r\n书籍\r\n分析与设计\r\nPython\r\n我的著作列表\r\n索引\r\n\r\n查看全部↓\r\n精彩书摘\r\n　　1.10 对象的创建和生命期\r\n　　在使用对象时，最关键的问题之一便是它们的生成和销毁方式。每个对象为了生存都需要资源，尤其是内存。当我们不再需要一个对象时，它必须被清理掉，使其占有的资源可以被释放和重用。在相对简单的编程情况下，怎样清理对象看起来似乎不是什么挑战：你创建了对象，根据需要使用它，然后它应该被销毁。然而，你很可能会遇到相对复杂的情况。\r\n　　例如，假设你正在为某个机场设计空中交通管理系统（同样的模型在仓库货柜管理系统、录像带出租系统或宠物寄宿店也适用）。一开始问题似乎很简单：创建一个容器来保存所有的飞机，然后为每一架进入空中交通控制区域的飞机创建一个新的飞机对象，并将其置于容器中。对于清理工作，只需在飞机离开此区域时删除相关的飞机对象即可。\r\n　　但是，可能还有别的系统记录着有关飞机的数据，也许这些数据不需要像主要控制功能那样立即引人注意。例如，它可能记录着所有飞离机场的小型飞机的飞行计划。因此你需要有第二个容器来存放小型飞机，无论何时，只要创建的是小型飞机对象，那么它同时也应该置入第二个容器内。然后某个后台进程在空闲时对第二个容器内的对象进行操作。\r\n　　现在问题变得更困难了：怎样才能知道何时销毁这些对象呢？当处理完某个对象之后，系统某个其他部分可能还在处理它。在其他许多场合中也会遇到同样的问题，在必须明确删除对象的编程系统中（例如C++），此问题会变得十分复杂。\r\n　　对象的数据位于何处？怎样控制对象的生命周期？C++认为效率控制是最重要的议题，所以给程序员提供了选择的权力。为了追求最大的执行速度，对象的存储空间和生命周期可以在编写程序时确定，这可以通过将对象置于堆栈（它们有时被称为自动变量（automaticvariable）或限域变量（scopedvariable））或静态存储区域内来实现。这种方式将存储空间分配和释放置于优先考虑的位置，某些情况下这样控制非常有价值。但是，也牺牲了灵活性，因为必须在编写程序时知道对象确切的数量、生命周期和类型。如果试图解决更一般化的问题，例如计算机辅助设计、仓库管理或者空中交通控制，这种方式就显得过于受限了。\r\n　　第二种方式是在被称为堆（heap）的内存池中动态地创建对象。在这种方式中，直到运行时才知道需要多少对象，它们的生命周期如何，以及它们的具体类型是什么。这些问题的答案只能在程序运行时相关代码被执行到的那一刻才能确定。如果需要一个新对象，可以在需要的时刻直接在堆中创建。因为存储空间是在运行时被动态管理的，所以需要大量的时间在堆中分配存储空间，这可能要远远大于在堆栈中创建存储空间的时间。在堆栈中创建存储空间和释放存储空间通常各需要一条汇编指令即可，分别对应将栈顶指针向下移动和将栈顶指针向上移动。创建堆存储空间的时间依赖于存储机制的设计。\r\n　　动态方式有这样一个一般性的逻辑假设：对象趋向于变得复杂，所以查找和释放存储空间的开销不会对对象的创建造成重大冲击。动态方式所带来的更大的灵活性正是解决一般化编程问题的要点所在。\r\n　　Java完全采用了动态内存分配方式e。每当想要创建新对象时，就要使用new关键字来构建此对象的动态实例。\r\n　　……\r\n\r\n查看全部↓\r\n前言/序言\r\n　　时隔两年多，《Java编程思想（第4版）》的中文版又要和广大Java程序员和爱好者们见面了。这是Java语言本身不断发展和完善的必然要求，也是本书作者BruceEckel孜孜不倦的创作激情和灵感所结出的硕果。　　《Java编程思想（第4版）》以Java最新的版本JDK5.0为基础，在第3版的基础上，添加了最新的语言特性，并且对第3版的结构进行了调整，使得所有章节的安排更加遵照循序渐进的特点，同时每一章的内容在分量上也都更加均衡，这使读者能够更加容易地阅读本书并充分了解每章所讲述的内容。在这里我们再次向BruceEckel致敬，他不但向我们展示了什么样的书籍才是经典书籍，而且还展示了经典书籍怎样才能精益求精，长盛不衰。　　Java已经成为了编程语言的骄子。我们可以看到，越来越多的大学在教授数据结构、程序设计和算法分析等课程时，选择以Java语言为载体。这说明Java语言已经是人们构建软件系统时主要使用的一种编程语言。但是，掌握好Java语言并不是一件可以轻松完成的任务，如何真正掌握Java语言，从而编写出健壮的、高效的以及灵活的程序是Java程序员们面临的重大挑战。　　《Java编程思想（第4版）》就是一本能够让Java程序员轻松面对这一挑战，并最终取得胜利的经典书籍。本书深入浅出、循序渐进地把我们领入Java的世界，让我们在不知不觉中就学会了用Java的思想去考虑问题、解决问题。本书不仅适合Java的初学者，更适合于有经验的Java程序员，这正是本书的魅力所在。但是，书中并没有涵盖Java所有的类、接口和方法，因此，如果你希望将它当作Java的字典来使用，那么显然就要失望了。　　我们在翻译本书的过程中力求忠于原著，为了保持连贯性，对原书第3版中仍然保持不变的部分，我们对译文除了个别地方之外，也没做修改。对于本书中出现的大量的专业术语尽量遵循标准的译法，并在有可能引起歧义之处注有英文原文，以方便读者对照与理解。　　全书由陈昊鹏翻译，郭嘉也参与了部分翻译工作。由于水平有限，书中出现错误与不妥之处在所难免，恳请读者批评指正。\r\n\r\n\r\n产品特色\r\n编辑推荐\r\n内容简介\r\n作者简介\r\n目录\r\n精彩书摘\r\n前言/序言\r\n\r\n下载客户端，开始阅读之旅\r\n出版社： 机械工业出版社 ISBN：9787111213826版次：4商品编码：10058164品牌：机工出版包装：平装丛书名： 计算机科学丛书 外文名称：thinking in java开本：16开出版时间：2007-06-01用纸：胶版纸页数：880正文语种：中文\r\n \r\n\r\n\r\n产品特色\r\n店铺入口750-100B.jpg\r\n\r\n\r\njava编程思想750.jpg\r\n\r\n\r\n750.jpg\r\n\r\n编辑推荐\r\n图书封底提供的网址更改为：https://www.mindviewllc.com/about/\r\n\r\n\r\n\r\n内容简介\r\n　　《计算机科学丛书：Java编程思想（第4版）》赢得了全球程序员的广泛赞誉，即使是晦涩的概念，在BruceEckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从Java的基础语法到高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。\r\n　　从《计算机科学丛书：Java编程思想（第4版）》获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对C、C++以及Java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、JavaI/O系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了Java语言基础语法以及高级特性，适合各个层次的Java程序员阅读，同时也是高等院校讲授面向对象程序设计语言以及Java语言的好教材和参考书。\r\n　　《计算机科学丛书：Java编程思想（第4版）》特点：\r\n　　适合初学者与专业人员的经典的面向对象叙述方式，为更新的JavaSE5/6增加了新的示例和章节。\r\n　　测验框架显示程序输出。\r\n　　设计模式贯穿于众多示例中：适配器、桥接器、职责链、命令、装饰器、外观、工厂方法、享元、点名、数据传输对象、空对象、代理、单例、状态、策略、模板方法以及访问者。\r\n　　为数据传输引入了XML，为用户界面引入了SWT和Flash。\r\n　　重新撰写了有关并发的章节，有助于读者掌握线程的相关知识。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n　　在线可获得Java讲座CD，其中包含BruceEckel的全部多媒体讲座。\r\n　　在网站上可以观看现场讲座、咨询和评论。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n\r\n作者简介\r\n　　Bruce Eckel，是MindView公司的总裁，该公司向客户提供软件咨询和培训。他是C++标准委员会拥有表决权的成员之一，拥有应用物理学学士和计算机工程硕士学位。除本书外，他还是《C++编程思想》的作者，并与人合著了《C++编程思想第2卷》。\r\n\r\n目录\r\n读者评论\r\n前言\r\n简介\r\n第1章 对象导论\r\n1.1 抽象过程\r\n1.2 每个对象都有一个接口\r\n1.3 每个对象都提供服务\r\n1.4 被隐藏的具体实现\r\n1.5 复用具体实现\r\n1.6 继承\r\n1.6.1 “是一个”（is-a）与“像是一个”（is-like-a）关系\r\n1.7 伴随多态的可互换对象\r\n1.8 单根继承结构\r\n1.9 容器\r\n1.9.1 参数化类型（范型）\r\n1.10 对象的创建和生命期\r\n1.11 异常处理：处理错误\r\n1.12 并发编程\r\n1.13 Java与Internet\r\n1.13.1 Web是什么\r\n1.13.2 客户端编程\r\n1.13.3 服务器端编程\r\n1.22 总结\r\n\r\n第2章 一切都是对象\r\n2.1 用引用操纵对象\r\n2.2 必须由你创建所有对象\r\n2.2.1 存储到什么地方\r\n2.2.2 特例：基本类型\r\n2.2.3 Java中的数组\r\n2.3 永远不需要销毁对象\r\n2.3.1 作用域\r\n2.3.2 对象的作用域\r\n2.4 创建新的数据类型：类\r\n2.4.1 域和方法\r\n2.4.2 基本成员默认值\r\n2.5 方法、参数和返回值\r\n2.5.1 参数列表\r\n2.6 构建一个Java程序\r\n2.6.1 名字可见性\r\n2.6.2 运用其他构件\r\n2.6.3 static 关键字\r\n2.7 你的第一个Java程序\r\n编译和运行\r\n2.8 注释和嵌入式文档\r\n2.8.1 注释文档\r\n2.8.2 语法\r\n2.8.3 嵌入式HTML\r\n2.8.4 一些标签示例\r\n2.8.5 文档示例\r\n2.9 编码风格\r\n2.10 总结\r\n2.11 练习\r\n\r\n第3章 操作符\r\n3.1 更简单的打印语句\r\n3.2 使用Java操作符\r\n3.3 优先级\r\n3.4 赋值\r\n3.4.1 方法调用中的别名问题\r\n3.5 算术操作符\r\n3.5.1 一元加、减操作符\r\n3.6 自动递增和递减\r\n3.7 关系操作符\r\n3.7.1 测试对象的等价性\r\n3.8 逻辑操作符\r\n3.8.1 短路\r\n3.9 直接常量\r\n3.9.1 指数记数法\r\n3.10 按位操作符\r\n3.11 移位操作符\r\n3.12 三元操作符 if-else\r\n3.13 字符串操作符 + 和 +=\r\n3.14 使用操作符时常犯的错误\r\n3.15 类型转换操作符\r\n3.15.1 截尾和舍入\r\n3.15.2 提升\r\n3.16 Java没有“sizeof”\r\n3.17 操作符小结\r\n3.18 总结\r\n\r\n......\r\n第4章 控制执行流程\r\n第5章 初始化与清理\r\n第6章 访问权限控制\r\n第7章 复用类\r\n第8章 多态\r\n第9章 接口\r\n第10章 内部类\r\n第11章 持有对象\r\n第12章 通过异常处理错误\r\n第13章 字符串\r\n第14章 类型信息\r\n第15章 泛型\r\n第16章 数组\r\n第17章 容器深入研究\r\n第18章 Java I/O系统\r\n第19章 枚举类型\r\n第20章 注解\r\n第21章 并发\r\n第22章 图形化用户界面\r\n附录A 补充材料\r\n可下载的补充材料\r\nThinking in C：Java的基础\r\nJava编程思想 研讨课\r\nHands-on Java研讨课CD\r\nThinking in Objects研讨课\r\nThinking in Enterprise Java\r\nThinking in Patterns(with Java)\r\nThinking in Patterns研讨课\r\n设计咨询与复审\r\n附录B 资源\r\n软件\r\n编辑器与IDE\r\n书籍\r\n分析与设计\r\nPython\r\n我的著作列表\r\n索引\r\n\r\n查看全部↓\r\n精彩书摘\r\n　　1.10 对象的创建和生命期\r\n　　在使用对象时，最关键的问题之一便是它们的生成和销毁方式。每个对象为了生存都需要资源，尤其是内存。当我们不再需要一个对象时，它必须被清理掉，使其占有的资源可以被释放和重用。在相对简单的编程情况下，怎样清理对象看起来似乎不是什么挑战：你创建了对象，根据需要使用它，然后它应该被销毁。然而，你很可能会遇到相对复杂的情况。\r\n　　例如，假设你正在为某个机场设计空中交通管理系统（同样的模型在仓库货柜管理系统、录像带出租系统或宠物寄宿店也适用）。一开始问题似乎很简单：创建一个容器来保存所有的飞机，然后为每一架进入空中交通控制区域的飞机创建一个新的飞机对象，并将其置于容器中。对于清理工作，只需在飞机离开此区域时删除相关的飞机对象即可。\r\n　　但是，可能还有别的系统记录着有关飞机的数据，也许这些数据不需要像主要控制功能那样立即引人注意。例如，它可能记录着所有飞离机场的小型飞机的飞行计划。因此你需要有第二个容器来存放小型飞机，无论何时，只要创建的是小型飞机对象，那么它同时也应该置入第二个容器内。然后某个后台进程在空闲时对第二个容器内的对象进行操作。\r\n　　现在问题变得更困难了：怎样才能知道何时销毁这些对象呢？当处理完某个对象之后，系统某个其他部分可能还在处理它。在其他许多场合中也会遇到同样的问题，在必须明确删除对象的编程系统中（例如C++），此问题会变得十分复杂。\r\n　　对象的数据位于何处？怎样控制对象的生命周期？C++认为效率控制是最重要的议题，所以给程序员提供了选择的权力。为了追求最大的执行速度，对象的存储空间和生命周期可以在编写程序时确定，这可以通过将对象置于堆栈（它们有时被称为自动变量（automaticvariable）或限域变量（scopedvariable））或静态存储区域内来实现。这种方式将存储空间分配和释放置于优先考虑的位置，某些情况下这样控制非常有价值。但是，也牺牲了灵活性，因为必须在编写程序时知道对象确切的数量、生命周期和类型。如果试图解决更一般化的问题，例如计算机辅助设计、仓库管理或者空中交通控制，这种方式就显得过于受限了。\r\n　　第二种方式是在被称为堆（heap）的内存池中动态地创建对象。在这种方式中，直到运行时才知道需要多少对象，它们的生命周期如何，以及它们的具体类型是什么。这些问题的答案只能在程序运行时相关代码被执行到的那一刻才能确定。如果需要一个新对象，可以在需要的时刻直接在堆中创建。因为存储空间是在运行时被动态管理的，所以需要大量的时间在堆中分配存储空间，这可能要远远大于在堆栈中创建存储空间的时间。在堆栈中创建存储空间和释放存储空间通常各需要一条汇编指令即可，分别对应将栈顶指针向下移动和将栈顶指针向上移动。创建堆存储空间的时间依赖于存储机制的设计。\r\n　　动态方式有这样一个一般性的逻辑假设：对象趋向于变得复杂，所以查找和释放存储空间的开销不会对对象的创建造成重大冲击。动态方式所带来的更大的灵活性正是解决一般化编程问题的要点所在。\r\n　　Java完全采用了动态内存分配方式e。每当想要创建新对象时，就要使用new关键字来构建此对象的动态实例。\r\n　　……\r\n\r\n查看全部↓\r\n前言/序言\r\n　　时隔两年多，《Java编程思想（第4版）》的中文版又要和广大Java程序员和爱好者们见面了。这是Java语言本身不断发展和完善的必然要求，也是本书作者BruceEckel孜孜不倦的创作激情和灵感所结出的硕果。　　《Java编程思想（第4版）》以Java最新的版本JDK5.0为基础，在第3版的基础上，添加了最新的语言特性，并且对第3版的结构进行了调整，使得所有章节的安排更加遵照循序渐进的特点，同时每一章的内容在分量上也都更加均衡，这使读者能够更加容易地阅读本书并充分了解每章所讲述的内容。在这里我们再次向BruceEckel致敬，他不但向我们展示了什么样的书籍才是经典书籍，而且还展示了经典书籍怎样才能精益求精，长盛不衰。　　Java已经成为了编程语言的骄子。我们可以看到，越来越多的大学在教授数据结构、程序设计和算法分析等课程时，选择以Java语言为载体。这说明Java语言已经是人们构建软件系统时主要使用的一种编程语言。但是，掌握好Java语言并不是一件可以轻松完成的任务，如何真正掌握Java语言，从而编写出健壮的、高效的以及灵活的程序是Java程序员们面临的重大挑战。　　《Java编程思想（第4版）》就是一本能够让Java程序员轻松面对这一挑战，并最终取得胜利的经典书籍。本书深入浅出、循序渐进地把我们领入Java的世界，让我们在不知不觉中就学会了用Java的思想去考虑问题、解决问题。本书不仅适合Java的初学者，更适合于有经验的Java程序员，这正是本书的魅力所在。但是，书中并没有涵盖Java所有的类、接口和方法，因此，如果你希望将它当作Java的字典来使用，那么显然就要失望了。　　我们在翻译本书的过程中力求忠于原著，为了保持连贯性，对原书第3版中仍然保持不变的部分，我们对译文除了个别地方之外，也没做修改。对于本书中出现的大量的专业术语尽量遵循标准的译法，并在有可能引起歧义之处注有英文原文，以方便读者对照与理解。　　全书由陈昊鹏翻译，郭嘉也参与了部分翻译工作。由于水平有限，书中出现错误与不妥之处在所难免，恳请读者批评指正。\r\n\r\n\r\n产品特色\r\n编辑推荐\r\n内容简介\r\n作者简介\r\n目录\r\n精彩书摘\r\n前言/序言\r\n\r\n下载客户端，开始阅读之旅\r\n出版社： 机械工业出版社 ISBN：9787111213826版次：4商品编码：10058164品牌：机工出版包装：平装丛书名： 计算机科学丛书 外文名称：thinking in java开本：16开出版时间：2007-06-01用纸：胶版纸页数：880正文语种：中文\r\n \r\n\r\n\r\n产品特色\r\n店铺入口750-100B.jpg\r\n\r\n\r\njava编程思想750.jpg\r\n\r\n\r\n750.jpg\r\n\r\n编辑推荐\r\n图书封底提供的网址更改为：https://www.mindviewllc.com/about/\r\n\r\n\r\n\r\n内容简介\r\n　　《计算机科学丛书：Java编程思想（第4版）》赢得了全球程序员的广泛赞誉，即使是晦涩的概念，在BruceEckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从Java的基础语法到高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。\r\n　　从《计算机科学丛书：Java编程思想（第4版）》获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对C、C++以及Java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、JavaI/O系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了Java语言基础语法以及高级特性，适合各个层次的Java程序员阅读，同时也是高等院校讲授面向对象程序设计语言以及Java语言的好教材和参考书。\r\n　　《计算机科学丛书：Java编程思想（第4版）》特点：\r\n　　适合初学者与专业人员的经典的面向对象叙述方式，为更新的JavaSE5/6增加了新的示例和章节。\r\n　　测验框架显示程序输出。\r\n　　设计模式贯穿于众多示例中：适配器、桥接器、职责链、命令、装饰器、外观、工厂方法、享元、点名、数据传输对象、空对象、代理、单例、状态、策略、模板方法以及访问者。\r\n　　为数据传输引入了XML，为用户界面引入了SWT和Flash。\r\n　　重新撰写了有关并发的章节，有助于读者掌握线程的相关知识。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n　　在线可获得Java讲座CD，其中包含BruceEckel的全部多媒体讲座。\r\n　　在网站上可以观看现场讲座、咨询和评论。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n\r\n作者简介\r\n　　Bruce Eckel，是MindView公司的总裁，该公司向客户提供软件咨询和培训。他是C++标准委员会拥有表决权的成员之一，拥有应用物理学学士和计算机工程硕士学位。除本书外，他还是《C++编程思想》的作者，并与人合著了《C++编程思想第2卷》。\r\n\r\n目录\r\n读者评论\r\n前言\r\n简介\r\n第1章 对象导论\r\n1.1 抽象过程\r\n1.2 每个对象都有一个接口\r\n1.3 每个对象都提供服务\r\n1.4 被隐藏的具体实现\r\n1.5 复用具体实现\r\n1.6 继承\r\n1.6.1 “是一个”（is-a）与“像是一个”（is-like-a）关系\r\n1.7 伴随多态的可互换对象\r\n1.8 单根继承结构\r\n1.9 容器\r\n1.9.1 参数化类型（范型）\r\n1.10 对象的创建和生命期\r\n1.11 异常处理：处理错误\r\n1.12 并发编程\r\n1.13 Java与Internet\r\n1.13.1 Web是什么\r\n1.13.2 客户端编程\r\n1.13.3 服务器端编程\r\n1.22 总结\r\n\r\n第2章 一切都是对象\r\n2.1 用引用操纵对象\r\n2.2 必须由你创建所有对象\r\n2.2.1 存储到什么地方\r\n2.2.2 特例：基本类型\r\n2.2.3 Java中的数组\r\n2.3 永远不需要销毁对象\r\n2.3.1 作用域\r\n2.3.2 对象的作用域\r\n2.4 创建新的数据类型：类\r\n2.4.1 域和方法\r\n2.4.2 基本成员默认值\r\n2.5 方法、参数和返回值\r\n2.5.1 参数列表\r\n2.6 构建一个Java程序\r\n2.6.1 名字可见性\r\n2.6.2 运用其他构件\r\n2.6.3 static 关键字\r\n2.7 你的第一个Java程序\r\n编译和运行\r\n2.8 注释和嵌入式文档\r\n2.8.1 注释文档\r\n2.8.2 语法\r\n2.8.3 嵌入式HTML\r\n2.8.4 一些标签示例\r\n2.8.5 文档示例\r\n2.9 编码风格\r\n2.10 总结\r\n2.11 练习\r\n\r\n第3章 操作符\r\n3.1 更简单的打印语句\r\n3.2 使用Java操作符\r\n3.3 优先级\r\n3.4 赋值\r\n3.4.1 方法调用中的别名问题\r\n3.5 算术操作符\r\n3.5.1 一元加、减操作符\r\n3.6 自动递增和递减\r\n3.7 关系操作符\r\n3.7.1 测试对象的等价性\r\n3.8 逻辑操作符\r\n3.8.1 短路\r\n3.9 直接常量\r\n3.9.1 指数记数法\r\n3.10 按位操作符\r\n3.11 移位操作符\r\n3.12 三元操作符 if-else\r\n3.13 字符串操作符 + 和 +=\r\n3.14 使用操作符时常犯的错误\r\n3.15 类型转换操作符\r\n3.15.1 截尾和舍入\r\n3.15.2 提升\r\n3.16 Java没有“sizeof”\r\n3.17 操作符小结\r\n3.18 总结\r\n\r\n......\r\n第4章 控制执行流程\r\n第5章 初始化与清理\r\n第6章 访问权限控制\r\n第7章 复用类\r\n第8章 多态\r\n第9章 接口\r\n第10章 内部类\r\n第11章 持有对象\r\n第12章 通过异常处理错误\r\n第13章 字符串\r\n第14章 类型信息\r\n第15章 泛型\r\n第16章 数组\r\n第17章 容器深入研究\r\n第18章 Java I/O系统\r\n第19章 枚举类型\r\n第20章 注解\r\n第21章 并发\r\n第22章 图形化用户界面\r\n附录A 补充材料\r\n可下载的补充材料\r\nThinking in C：Java的基础\r\nJava编程思想 研讨课\r\nHands-on Java研讨课CD\r\nThinking in Objects研讨课\r\nThinking in Enterprise Java\r\nThinking in Patterns(with Java)\r\nThinking in Patterns研讨课\r\n设计咨询与复审\r\n附录B 资源\r\n软件\r\n编辑器与IDE\r\n书籍\r\n分析与设计\r\nPython\r\n我的著作列表\r\n索引\r\n\r\n查看全部↓\r\n精彩书摘\r\n　　1.10 对象的创建和生命期\r\n　　在使用对象时，最关键的问题之一便是它们的生成和销毁方式。每个对象为了生存都需要资源，尤其是内存。当我们不再需要一个对象时，它必须被清理掉，使其占有的资源可以被释放和重用。在相对简单的编程情况下，怎样清理对象看起来似乎不是什么挑战：你创建了对象，根据需要使用它，然后它应该被销毁。然而，你很可能会遇到相对复杂的情况。\r\n　　例如，假设你正在为某个机场设计空中交通管理系统（同样的模型在仓库货柜管理系统、录像带出租系统或宠物寄宿店也适用）。一开始问题似乎很简单：创建一个容器来保存所有的飞机，然后为每一架进入空中交通控制区域的飞机创建一个新的飞机对象，并将其置于容器中。对于清理工作，只需在飞机离开此区域时删除相关的飞机对象即可。\r\n　　但是，可能还有别的系统记录着有关飞机的数据，也许这些数据不需要像主要控制功能那样立即引人注意。例如，它可能记录着所有飞离机场的小型飞机的飞行计划。因此你需要有第二个容器来存放小型飞机，无论何时，只要创建的是小型飞机对象，那么它同时也应该置入第二个容器内。然后某个后台进程在空闲时对第二个容器内的对象进行操作。\r\n　　现在问题变得更困难了：怎样才能知道何时销毁这些对象呢？当处理完某个对象之后，系统某个其他部分可能还在处理它。在其他许多场合中也会遇到同样的问题，在必须明确删除对象的编程系统中（例如C++），此问题会变得十分复杂。\r\n　　对象的数据位于何处？怎样控制对象的生命周期？C++认为效率控制是最重要的议题，所以给程序员提供了选择的权力。为了追求最大的执行速度，对象的存储空间和生命周期可以在编写程序时确定，这可以通过将对象置于堆栈（它们有时被称为自动变量（automaticvariable）或限域变量（scopedvariable））或静态存储区域内来实现。这种方式将存储空间分配和释放置于优先考虑的位置，某些情况下这样控制非常有价值。但是，也牺牲了灵活性，因为必须在编写程序时知道对象确切的数量、生命周期和类型。如果试图解决更一般化的问题，例如计算机辅助设计、仓库管理或者空中交通控制，这种方式就显得过于受限了。\r\n　　第二种方式是在被称为堆（heap）的内存池中动态地创建对象。在这种方式中，直到运行时才知道需要多少对象，它们的生命周期如何，以及它们的具体类型是什么。这些问题的答案只能在程序运行时相关代码被执行到的那一刻才能确定。如果需要一个新对象，可以在需要的时刻直接在堆中创建。因为存储空间是在运行时被动态管理的，所以需要大量的时间在堆中分配存储空间，这可能要远远大于在堆栈中创建存储空间的时间。在堆栈中创建存储空间和释放存储空间通常各需要一条汇编指令即可，分别对应将栈顶指针向下移动和将栈顶指针向上移动。创建堆存储空间的时间依赖于存储机制的设计。\r\n　　动态方式有这样一个一般性的逻辑假设：对象趋向于变得复杂，所以查找和释放存储空间的开销不会对对象的创建造成重大冲击。动态方式所带来的更大的灵活性正是解决一般化编程问题的要点所在。\r\n　　Java完全采用了动态内存分配方式e。每当想要创建新对象时，就要使用new关键字来构建此对象的动态实例。\r\n　　……\r\n\r\n查看全部↓\r\n前言/序言\r\n　　时隔两年多，《Java编程思想（第4版）》的中文版又要和广大Java程序员和爱好者们见面了。这是Java语言本身不断发展和完善的必然要求，也是本书作者BruceEckel孜孜不倦的创作激情和灵感所结出的硕果。　　《Java编程思想（第4版）》以Java最新的版本JDK5.0为基础，在第3版的基础上，添加了最新的语言特性，并且对第3版的结构进行了调整，使得所有章节的安排更加遵照循序渐进的特点，同时每一章的内容在分量上也都更加均衡，这使读者能够更加容易地阅读本书并充分了解每章所讲述的内容。在这里我们再次向BruceEckel致敬，他不但向我们展示了什么样的书籍才是经典书籍，而且还展示了经典书籍怎样才能精益求精，长盛不衰。　　Java已经成为了编程语言的骄子。我们可以看到，越来越多的大学在教授数据结构、程序设计和算法分析等课程时，选择以Java语言为载体。这说明Java语言已经是人们构建软件系统时主要使用的一种编程语言。但是，掌握好Java语言并不是一件可以轻松完成的任务，如何真正掌握Java语言，从而编写出健壮的、高效的以及灵活的程序是Java程序员们面临的重大挑战。　　《Java编程思想（第4版）》就是一本能够让Java程序员轻松面对这一挑战，并最终取得胜利的经典书籍。本书深入浅出、循序渐进地把我们领入Java的世界，让我们在不知不觉中就学会了用Java的思想去考虑问题、解决问题。本书不仅适合Java的初学者，更适合于有经验的Java程序员，这正是本书的魅力所在。但是，书中并没有涵盖Java所有的类、接口和方法，因此，如果你希望将它当作Java的字典来使用，那么显然就要失望了。　　我们在翻译本书的过程中力求忠于原著，为了保持连贯性，对原书第3版中仍然保持不变的部分，我们对译文除了个别地方之外，也没做修改。对于本书中出现的大量的专业术语尽量遵循标准的译法，并在有可能引起歧义之处注有英文原文，以方便读者对照与理解。　　全书由陈昊鹏翻译，郭嘉也参与了部分翻译工作。由于水平有限，书中出现错误与不妥之处在所难免，恳请读者批评指正。\r\n\r\n\r\n产品特色\r\n编辑推荐\r\n内容简介\r\n作者简介\r\n目录\r\n精彩书摘\r\n前言/序言\r\n\r\n下载客户端，开始阅读之旅\r\n出版社： 机械工业出版社 ISBN：9787111213826版次：4商品编码：10058164品牌：机工出版包装：平装丛书名： 计算机科学丛书 外文名称：thinking in java开本：16开出版时间：2007-06-01用纸：胶版纸页数：880正文语种：中文\r\n \r\n\r\n\r\n产品特色\r\n店铺入口750-100B.jpg\r\n\r\n\r\njava编程思想750.jpg\r\n\r\n\r\n750.jpg\r\n\r\n编辑推荐\r\n图书封底提供的网址更改为：https://www.mindviewllc.com/about/\r\n\r\n\r\n\r\n内容简介\r\n　　《计算机科学丛书：Java编程思想（第4版）》赢得了全球程序员的广泛赞誉，即使是晦涩的概念，在BruceEckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从Java的基础语法到高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。\r\n　　从《计算机科学丛书：Java编程思想（第4版）》获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对C、C++以及Java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、JavaI/O系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了Java语言基础语法以及高级特性，适合各个层次的Java程序员阅读，同时也是高等院校讲授面向对象程序设计语言以及Java语言的好教材和参考书。\r\n　　《计算机科学丛书：Java编程思想（第4版）》特点：\r\n　　适合初学者与专业人员的经典的面向对象叙述方式，为更新的JavaSE5/6增加了新的示例和章节。\r\n　　测验框架显示程序输出。\r\n　　设计模式贯穿于众多示例中：适配器、桥接器、职责链、命令、装饰器、外观、工厂方法、享元、点名、数据传输对象、空对象、代理、单例、状态、策略、模板方法以及访问者。\r\n　　为数据传输引入了XML，为用户界面引入了SWT和Flash。\r\n　　重新撰写了有关并发的章节，有助于读者掌握线程的相关知识。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n　　在线可获得Java讲座CD，其中包含BruceEckel的全部多媒体讲座。\r\n　　在网站上可以观看现场讲座、咨询和评论。\r\n　　专门为第4版以及JavaSE5/6重写了700多个编译文件中的500多个程序。\r\n　　支持网站包含了所有源代码、带注解的解决方案指南、网络日志以及多媒体学习资料。\r\n　　覆盖了所有基础知识，同时论述了高级特性。\r\n　　详细地阐述了面向对象原理。\r\n\r\n作者简介\r\n　　Bruce Eckel，是MindView公司的总裁，该公司向客户提供软件咨询和培训。他是C++标准委员会拥有表决权的成员之一，拥有应用物理学学士和计算机工程硕士学位。除本书外，他还是《C++编程思想》的作者，并与人合著了《C++编程思想第2卷》。\r\n\r\n目录\r\n读者评论\r\n前言\r\n简介\r\n第1章 对象导论\r\n1.1 抽象过程\r\n1.2 每个对象都有一个接口\r\n1.3 每个对象都提供服务\r\n1.4 被隐藏的具体实现\r\n1.5 复用具体实现\r\n1.6 继承\r\n1.6.1 “是一个”（is-a）与“像是一个”（is-like-a）关系\r\n1.7 伴随多态的可互换对象\r\n1.8 单根继承结构\r\n1.9 容器\r\n1.9.1 参数化类型（范型）\r\n1.10 对象的创建和生命期\r\n1.11 异常处理：处理错误\r\n1.12 并发编程\r\n1.13 Java与Internet\r\n1.13.1 Web是什么\r\n1.13.2 客户端编程\r\n1.13.3 服务器端编程\r\n1.22 总结\r\n\r\n第2章 一切都是对象\r\n2.1 用引用操纵对象\r\n2.2 必须由你创建所有对象\r\n2.2.1 存储到什么地方\r\n2.2.2 特例：基本类型\r\n2.2.3 Java中的数组\r\n2.3 永远不需要销毁对象\r\n2.3.1 作用域\r\n2.3.2 对象的作用域\r\n2.4 创建新的数据类型：类\r\n2.4.1 域和方法\r\n2.4.2 基本成员默认值\r\n2.5 方法、参数和返回值\r\n2.5.1 参数列表\r\n2.6 构建一个Java程序\r\n2.6.1 名字可见性\r\n2.6.2 运用其他构件\r\n2.6.3 static 关键字\r\n2.7 你的第一个Java程序\r\n编译和运行\r\n2.8 注释和嵌入式文档\r\n2.8.1 注释文档\r\n2.8.2 语法\r\n2.8.3 嵌入式HTML\r\n2.8.4 一些标签示例\r\n2.8.5 文档示例\r\n2.9 编码风格\r\n2.10 总结\r\n2.11 练习\r\n\r\n第3章 操作符\r\n3.1 更简单的打印语句\r\n3.2 使用Java操作符\r\n3.3 优先级\r\n3.4 赋值\r\n3.4.1 方法调用中的别名问题\r\n3.5 算术操作符\r\n3.5.1 一元加、减操作符\r\n3.6 自动递增和递减\r\n3.7 关系操作符\r\n3.7.1 测试对象的等价性\r\n3.8 逻辑操作符\r\n3.8.1 短路\r\n3.9 直接常量\r\n3.9.1 指数记数法\r\n3.10 按位操作符\r\n3.11 移位操作符\r\n3.12 三元操作符 if-else\r\n3.13 字符串操作符 + 和 +=\r\n3.14 使用操作符时常犯的错误\r\n3.15 类型转换操作符\r\n3.15.1 截尾和舍入\r\n3.15.2 提升\r\n3.16 Java没有“sizeof”\r\n3.17 操作符小结\r\n3.18 总结\r\n\r\n......\r\n第4章 控制执行流程\r\n第5章 初始化与清理\r\n第6章 访问权限控制\r\n第7章 复用类\r\n第8章 多态\r\n第9章 接口\r\n第10章 内部类\r\n第11章 持有对象\r\n第12章 通过异常处理错误\r\n第13章 字符串\r\n第14章 类型信息\r\n第15章 泛型\r\n第16章 数组\r\n第17章 容器深入研究\r\n第18章 Java I/O系统\r\n第19章 枚举类型\r\n第20章 注解\r\n第21章 并发\r\n第22章 图形化用户界面\r\n附录A 补充材料\r\n可下载的补充材料\r\nThinking in C：Java的基础\r\nJava编程思想 研讨课\r\nHands-on Java研讨课CD\r\nThinking in Objects研讨课\r\nThinking in Enterprise Java\r\nThinking in Patterns(with Java)\r\nThinking in Patterns研讨课\r\n设计咨询与复审\r\n附录B 资源\r\n软件\r\n编辑器与IDE\r\n书籍\r\n分析与设计\r\nPython\r\n我的著作列表\r\n索引\r\n\r\n查看全部↓\r\n精彩书摘\r\n　　1.10 对象的创建和生命期\r\n　　在使用对象时，最关键的问题之一便是它们的生成和销毁方式。每个对象为了生存都需要资源，尤其是内存。当我们不再需要一个对象时，它必须被清理掉，使其占有的资源可以被释放和重用。在相对简单的编程情况下，怎样清理对象看起来似乎不是什么挑战：你创建了对象，根据需要使用它，然后它应该被销毁。然而，你很可能会遇到相对复杂的情况。\r\n　　例如，假设你正在为某个机场设计空中交通管理系统（同样的模型在仓库货柜管理系统、录像带出租系统或宠物寄宿店也适用）。一开始问题似乎很简单：创建一个容器来保存所有的飞机，然后为每一架进入空中交通控制区域的飞机创建一个新的飞机对象，并将其置于容器中。对于清理工作，只需在飞机离开此区域时删除相关的飞机对象即可。\r\n　　但是，可能还有别的系统记录着有关飞机的数据，也许这些数据不需要像主要控制功能那样立即引人注意。例如，它可能记录着所有飞离机场的小型飞机的飞行计划。因此你需要有第二个容器来存放小型飞机，无论何时，只要创建的是小型飞机对象，那么它同时也应该置入第二个容器内。然后某个后台进程在空闲时对第二个容器内的对象进行操作。\r\n　　现在问题变得更困难了：怎样才能知道何时销毁这些对象呢？当处理完某个对象之后，系统某个其他部分可能还在处理它。在其他许多场合中也会遇到同样的问题，在必须明确删除对象的编程系统中（例如C++），此问题会变得十分复杂。\r\n　　对象的数据位于何处？怎样控制对象的生命周期？C++认为效率控制是最重要的议题，所以给程序员提供了选择的权力。为了追求最大的执行速度，对象的存储空间和生命周期可以在编写程序时确定，这可以通过将对象置于堆栈（它们有时被称为自动变量（automaticvariable）或限域变量（scopedvariable））或静态存储区域内来实现。这种方式将存储空间分配和释放置于优先考虑的位置，某些情况下这样控制非常有价值。但是，也牺牲了灵活性，因为必须在编写程序时知道对象确切的数量、生命周期和类型。如果试图解决更一般化的问题，例如计算机辅助设计、仓库管理或者空中交通控制，这种方式就显得过于受限了。\r\n　　第二种方式是在被称为堆（heap）的内存池中动态地创建对象。在这种方式中，直到运行时才知道需要多少对象，它们的生命周期如何，以及它们的具体类型是什么。这些问题的答案只能在程序运行时相关代码被执行到的那一刻才能确定。如果需要一个新对象，可以在需要的时刻直接在堆中创建。因为存储空间是在运行时被动态管理的，所以需要大量的时间在堆中分配存储空间，这可能要远远大于在堆栈中创建存储空间的时间。在堆栈中创建存储空间和释放存储空间通常各需要一条汇编指令即可，分别对应将栈顶指针向下移动和将栈顶指针向上移动。创建堆存储空间的时间依赖于存储机制的设计。\r\n　　动态方式有这样一个一般性的逻辑假设：对象趋向于变得复杂，所以查找和释放存储空间的开销不会对对象的创建造成重大冲击。动态方式所带来的更大的灵活性正是解决一般化编程问题的要点所在。\r\n　　Java完全采用了动态内存分配方式e。每当想要创建新对象时，就要使用new关键字来构建此对象的动态实例。\r\n　　……\r\n\r\n查看全部↓\r\n前言/序言\r\n　　时隔两年多，《Java编程思想（第4版）》的中文版又要和广大Java程序员和爱好者们见面了。这是Java语言本身不断发展和完善的必然要求，也是本书作者BruceEckel孜孜不倦的创作激情和灵感所结出的硕果。　　《Java编程思想（第4版）》以Java最新的版本JDK5.0为基础，在第3版的基础上，添加了最新的语言特性，并且对第3版的结构进行了调整，使得所有章节的安排更加遵照循序渐进的特点，同时每一章的内容在分量上也都更加均衡，这使读者能够更加容易地阅读本书并充分了解每章所讲述的内容。在这里我们再次向BruceEckel致敬，他不但向我们展示了什么样的书籍才是经典书籍，而且还展示了经典书籍怎样才能精益求精，长盛不衰。　　Java已经成为了编程语言的骄子。我们可以看到，越来越多的大学在教授数据结构、程序设计和算法分析等课程时，选择以Java语言为载体。这说明Java语言已经是人们构建软件系统时主要使用的一种编程语言。但是，掌握好Java语言并不是一件可以轻松完成的任务，如何真正掌握Java语言，从而编写出健壮的、高效的以及灵活的程序是Java程序员们面临的重大挑战。　　《Java编程思想（第4版）》就是一本能够让Java程序员轻松面对这一挑战，并最终取得胜利的经典书籍。本书深入浅出、循序渐进地把我们领入Java的世界，让我们在不知不觉中就学会了用Java的思想去考虑问题、解决问题。本书不仅适合Java的初学者，更适合于有经验的Java程序员，这正是本书的魅力所在。但是，书中并没有涵盖Java所有的类、接口和方法，因此，如果你希望将它当作Java的字典来使用，那么显然就要失望了。　　我们在翻译本书的过程中力求忠于原著，为了保持连贯性，对原书第3版中仍然保持不变的部分，我们对译文除了个别地方之外，也没做修改。对于本书中出现的大量的专业术语尽量遵循标准的译法，并在有可能引起歧义之处注有英文原文，以方便读者对照与理解。　　全书由陈昊鹏翻译，郭嘉也参与了部分翻译工作。由于水平有限，书中出现错误与不妥之处在所难免，恳请读者批评指正。\r\n\r\n\r\n产品特色\r\n编辑推荐\r\n内容简介\r\n作者简介\r\n目录\r\n精彩书摘\r\n前言/序言\r\n\r\n下载客户端，开始阅读之旅\r\n时隔两年多，《Java编程思想（第4版）》的中文版又要和广大Java程序员和爱好者们见面了。这是Java语言本身不断发展和完善的必然要求，也是本书作者BruceEckel孜孜不倦的创作激情和灵感所结出的硕果。　　《Java编程思想（第4版）》以Java最新的版本JDK5.0为基础，在第3版的基础上，添加了最新的语言特性，并且对第3版的结构进行了调整，使得所有章节的安排更加遵照循序渐进的特点，同时每一章的内容在分量上也都更加均衡，这使读者能够更加容易地阅读本书并充分了解每章所讲述的内容。在这里我们再次向BruceEckel致敬，他不但向我们展示了什么样的书籍才是经典书籍，而且还展示了经典书籍怎样才能精益求精，长盛不衰。　　Java已经成为了编程语言的骄子。我们可以看到，越来越多的大学在教授数据结构、程序设计和算法分析等课程时，选择以Java语言为载体。这说明Java语言已经是人们构建软件系统时主要使用的一种编程语言。但是，掌握好Java语言并不是一件可以轻松完成的任务，如何真正掌握Java语言，从而编写出健壮的、高效的以及灵活的程序是Java程序员们面临的重大挑战。　　《Java编程思想（第4版）》就是一本能够让Java程序员轻松面对这一挑战，并最终取得胜利的经典书籍。本书深入浅出、循序渐进地把我们领入Java的世界，让我们在不知不觉中就学会了用Java的思想去考虑问题、解决问题。本书不仅适合Java的初学者，更适合于有经验的Java程序员，这正是本书的魅力所在。但是，书中并没有涵盖Java所有的类、接口和方法，因此，如果你希望将它当作Java的字典来使用，那么显然就要失望了。　　我们在翻译本书的过程中力求忠于原著，为了保持连贯性，对原书第3版中仍然保持不变的部分，我们对译文除了个别地方之外，也没做修改。对于本书中出现的大量的专业术语尽量遵循标准的译法，并在有可能引起歧义之处注有英文原文，以方便读者对照与理解。　　全书由陈昊鹏翻译，郭嘉也参与了部分翻译工作。由于水平有限，书中出现错误与不妥之处在所难免，恳请读者批评指正。', '89.10', '10');


INSERT INTO `spike`.`spike_goods` (`id`, `goods_id`, `start_date`, `end_date`, `spike_price`, `stock_count`) VALUES ('4', '3', '2019-12-18 21:58:00', '2020-01-03 21:58:04', '0.01', '10');
INSERT INTO `spike`.`spike_goods` (`id`, `goods_id`, `start_date`, `end_date`, `spike_price`, `stock_count`) VALUES ('5', '4', '2020-01-02 07:41:15', '2020-01-03 21:58:18', '0.01', '5');


INSERT INTO `spike`.`spike_user` (`id`, `username`, `nickname`, `password`, `salt`, `head`, `register_date`, `last_login_date`, `login_count`) VALUES ('1', '13888888888', 'achun', '8f4b70c3bd44abc41f57c2f357078a3d', 'achun', NULL, '2019-12-10 22:06:51', NULL, '0');
